{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedButton","handleKeyup","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAUaA,EAAb,4MACEC,MAAyB,CACvBC,cAAe,IAFnB,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,cAAeE,EAAME,MAEJ,MAA7B,EAAKL,MAAMC,eACb,EAAKG,SAAS,CAAEH,cAAe,WAjBrC,uDAKE,WACEK,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAqBE,WACE,IAAQD,EAAkBO,KAAKR,MAAvBC,cAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEKF,KAAKR,MAAMC,cAAZ,mCAEiCA,EAFjC,KACK,kCA7BjB,GAAyBU,a,MCLzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.d47ea966.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedButton: string;\n};\n\ninterface Props {\n\n}\n\nexport class App extends Component<Props, State> {\n  state: Readonly<State> = {\n    pressedButton: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyup);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyup);\n  }\n\n  handleKeyup = (event: KeyboardEvent): void => {\n    this.setState({ pressedButton: event.key });\n\n    if (this.state.pressedButton === ' ') {\n      this.setState({ pressedButton: 'space' });\n    }\n  };\n\n  render() {\n    const { pressedButton } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            !this.state.pressedButton\n              ? ('Nothing was pressed yet')\n              : (`The last pressed key is [${pressedButton}]`)\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}